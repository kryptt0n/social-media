name: social-media
services:

  consul-server:
    image: hashicorp/consul
    container_name: consul-server
    command: agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    networks:
      - my_network

  gateway:
    image: openjdk:21-jdk
    volumes:
      - ./social-media-backend/gateway:/app/gateway
    working_dir: /app/gateway
    ports:
      - "8080:8080"
    networks:
      - my_network
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - consul-server
    ports:
      - 29092:29092
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://0.0.0.0:29092,CONTROLLER://kafka:9093
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - CLUSTER_ID=828bf6fe-a737-460d-8304-752b3df773ad
    networks:
      my_network:

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      my_network:

  ms-ss-media-exchange:
    image: openjdk:21-jdk
    ports:
      - "8580:8580"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-ss-media-exchange:/app/ms-ss-media-exchange
    working_dir: /app/ms-ss-media-exchange
    environment:
      - DB_DATABASE=sn_ss_media_exchange
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${MYSQL_ROOT_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  ms-os-user-profile:
    image: openjdk:21-jdk
    ports:
      - "8180:8180"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-os-user-profile:/app/ms-os-user-profile
    working_dir: /app/ms-os-user-profile
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server
      - ms-ss-user-profile-crud
      - ms-ss-media-exchange
      - ms-ss-follow

  ms-ss-user-profile-crud:
    image: openjdk:21-jdk
    ports:
      - "8181:8181"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-ss-user-profile-crud:/app/ms-ss-user-profile-crud
    working_dir: /app/ms-ss-user-profile-crud
    environment:
      - DB_DATABASE=sn_ss_user_profile_crud
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${MYSQL_ROOT_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  ms-ss-follow:
    image: openjdk:21-jdk
    ports:
      - "8182:8182"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-ss-follow:/app/ms-ss-follow
    working_dir: /app/ms-ss-follow
    environment:
      - DB_DATABASE=sn_ss_user_follow
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${MYSQL_ROOT_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  ms-os-identity:
    image: openjdk:21-jdk
    ports:
      - "8280:8280"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-os-identity:/app/ms-os-identity
    working_dir: /app/ms-os-identity
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server
      - ms-ss-credentials
      - ms-ss-jwt

  ms-ss-credentials:
    image: openjdk:21-jdk
    ports:
      - "8281:8281"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-ss-credentials:/app/ms-ss-credentials
    working_dir: /app/ms-ss-credentials
    environment:
      - DB_DATABASE=sn_ss_identity_credentials
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${MYSQL_ROOT_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JWT_KEY=${JWT_KEY}
      - FRONT_END_URL=${FRONT_END_URL}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  ms-ss-jwt:
    image: openjdk:21-jdk
    ports:
      - "8282:8282"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-ss-jwt:/app/ms-ss-jwt
    working_dir: /app/ms-ss-jwt
    environment:
      - DB_DATABASE=sn_ss_identity_jwt
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${MYSQL_ROOT_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JWT_KEY=${JWT_KEY}
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  ms-os-post:
    image: openjdk:21-jdk
    ports:
      - "8380:8380"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-os-post:/app/ms-os-post
    working_dir: /app/ms-os-post
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server
      - ms-ss-post
      - ms-ss-like
      - ms-ss-comment
      - ms-ss-media-exchange

  ms-ss-like:
    image: openjdk:21-jdk
    ports:
      - "8381:8381"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-ss-like:/app/ms-ss-like
    working_dir: /app/ms-ss-like
    environment:
      - DB_DATABASE=sn_ss_post_like
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${MYSQL_ROOT_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  ms-ss-comment:
    image: openjdk:21-jdk
    ports:
      - "8382:8382"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-ss-comment:/app/ms-ss-comment
    working_dir: /app/ms-ss-comment
    environment:
      - DB_DATABASE=sn_ss_post_comment
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${MYSQL_ROOT_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  ms-ss-post:
    image: openjdk:21-jdk
    ports:
      - "8384:8384"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-ss-post:/app/ms-ss-post
    working_dir: /app/ms-ss-post
    environment:
      - DB_DATABASE=sn_ss_post_crud
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${MYSQL_ROOT_USERNAME}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  ms-os-admin:
    image: openjdk:21-jdk
    ports:
      - "8680:8680"
    networks:
      - my_network
    volumes:
      - ./social-media-backend/ms-os-admin:/app/ms-os-admin
    working_dir: /app/ms-os-admin
    command: bash -c "chmod +x ./mvnw && ./mvnw spring-boot:run && tail -f /dev/null"
    depends_on:
      - consul-server

  frontend:
    image: node:22.13.0-alpine3.21
    ports:
      - "3000:3000"
    volumes:
      - ./social-media-frontend:/app/frontend
    working_dir: /app/frontend
    command: sh -c "npm install && npm run dev"
    networks:
      - my_network

volumes:
  db_data:

networks:
  my_network: